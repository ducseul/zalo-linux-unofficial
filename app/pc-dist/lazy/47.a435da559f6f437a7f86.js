(this.webpackJsonp=this.webpackJsonp||[]).push([[47],{AYQT:function(t,e,s){"use strict";s.r(e),s.d(e,"IDBDatabaseImpl",(function(){return I}));var i=s("8s2m"),r=s("VTBJ"),n=s("wH4e"),a=s("jDHv"),o=s("Mgpg"),c=s("ycTR"),h=s("h0S/"),l=s("dko3");const d=function(){const t=new Map;return async function(e,s,i,r){const a=`${i}_${r}`;if(t.has(a))return t.get(a);const o=Object(c.a)(i,n.a.IDB),h=null==o?void 0:o.partitionsMap.default.tables.filter((t=>t.tableName===r))[0],l=h.getTransformConfig(n.a.IDB);if(l){const s=await(null==o?void 0:o.getPartition(h.tableName,e));return await l.init(h,s.cipherKey),t.set(a,[l]),[l]}return[]}}();class u{constructor(t,e){this.dbName=t,this.dbIdentity=e,this.db=void 0,this.logger=void 0,this.db=null,this.dbName=t;const s=a.ModuleContainer.resolve(o.ZLoggerFactory);this.logger=s.createZLogger(h.ZLoggerNametags.liteIDB,[h.ZLoggerNametags.liteIDB])}acquireDB(){return new Promise((async(t,e)=>{if(this.db)return t(this.db);const s=l.a.open(this.dbName);s.onsuccess=()=>{this.db=s.result,t(this.db)},s.onerror=t=>{this.logger.zsymb(18,"17YNBf","open db error",this.dbName,t),e(t)},s.onupgradeneeded=t=>{this.logger.zsymb(0,"RZFcea","on db upgrade");const e=Object(c.a)(this.dbIdentity,n.a.IDB);null==e||e.partitionsMap.default.tables.map((e=>{let s={};if(e.isNonFieldlikeEntity)s={autoIncrement:!0};else{const t=e.primaryIndex;s={keyPath:Object(n.l)(t.getRealFields()),autoIncrement:t.autoIncrement}}t.target.result.createObjectStore(e.tableName,s)}))}}))}writeTrans(t){return new Promise(((e,s)=>{this.acquireDB().then((i=>{const r=i.transaction([t],"readwrite");r.oncomplete=e,r.onerror=s,e(r)}))}))}async writeStore(t){return(await this.writeTrans(t)).objectStore(t)}}class b extends u{constructor(t,e,s){super(s,e),this.uin=t,this.transforms=void 0,this.session=void 0,this.transforms=[],this.session=null}init(t){this.session=t}toDBTransform(t){if(Array.isArray(t)||(t=[t]),0===this.transforms.length)return t;return t.map((t=>{const e=Object(r.a)({},t);return this.transforms.forEach((t=>{t.toDB(e)})),e}))}add(t,e,s){return new Promise((i=>{try{const r=t.add(e);r.onsuccess=t=>{i(s)},r.onerror=t=>{var s,r;i(void 0),t.preventDefault(),t.stopPropagation(),0!==(null===(s=t.target)||void 0===s||null===(r=s.error)||void 0===r?void 0:r.code)&&this.logger.zsymb(18,"_ibEsz","import err: ",t,e)}}catch(r){this.logger.zsymb(18,"GUVK6C","add err",r,e),i(void 0)}}))}async import(t,e){this.transforms=await d(this.session,this.dbName,this.dbIdentity,t);const s=await this.writeStore(t),i=this.toDBTransform(e).reduce(((t,i,r)=>(t.push(this.add(s,i,e[r])),t)),[]);return Promise.all(i).then((t=>({success:t.filter((t=>!!t)),fail:[]})))}clear(){}}class m{constructor(){this.dbInstances=void 0,this.uin=void 0,this.uid=void 0,this.uin="",this.uid="",this.dbInstances=new Map}init(t,e){this.uid=t,this.uin=e}getDB(t,e){if(!this.dbInstances.has(e)){this.uin;const s=new b(this.uin,t,e);this.dbInstances.set(e,s),s.init({userId:this.uid,UIN:this.uin})}return this.dbInstances.get(e)}getDBName(t){switch(t){case"Core":return"zdb_"+this.uid;case"Res":return"zres_"+this.uid;default:return""}}insert(t,e,s){const i=this.getDB(t,this.getDBName(t));return i?i.import(e,s).then((t=>t)):Promise.resolve({success:[],fail:[]})}}var g;let f=null;class p{constructor(t){this.databaseName=void 0,this.tableName=void 0;const e=t.split("/");if(2!==e.length)throw Error("Invalid table path");this.databaseName=e[0],this.tableName=e[1]}insertMulti(t,e=i.a.DefaultInsertOptions){return f.insert(this.databaseName,this.tableName,t)}}let I=Object(a.singleton)(i.b)(g=Reflect.metadata("design:type",Function)(g=Reflect.metadata("design:paramtypes",[])(g=class{constructor(){this.tableCache=void 0,this.sessionInfo=void 0,this.tableCache=new Map,this.sessionInfo=null}authenticate(t){this.sessionInfo=t,function(t){f=new m,f.init(t.userId,t.UIN)}(t)}close(){return Promise.resolve()}table(t){if(!this.sessionInfo)throw Error("acess table before init session: "+t);if(!this.tableCache.has(t)){const e=new p(t);this.tableCache.set(t,e)}return this.tableCache.get(t)}})||g)||g)||g}}]);
//# sourceMappingURL=../sourcemaps/lazy/47.a435da559f6f437a7f86.js.map